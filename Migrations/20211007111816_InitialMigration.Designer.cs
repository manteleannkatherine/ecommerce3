// <auto-generated />
using System;
using ECommerce1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce1.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20211007111816_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce1.Models.About", b =>
                {
                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vision")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("View_About");
                });

            modelBuilder.Entity("ECommerce1.Models.Announcements", b =>
                {
                    b.Property<int>("AnnouncementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AnnouncementCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnnouncementDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnnouncementID");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("ECommerce1.Models.Customers", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerBaranggay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CustomerBirthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerBlock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CustomerUserCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ECommerce1.Models.Employees", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeBaranggay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EmployeeBirthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeBlock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("SecurityID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ECommerce1.Models.Messages", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("MessageRead")
                        .HasColumnType("int");

                    b.Property<string>("MessageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageTrash")
                        .HasColumnType("int");

                    b.HasKey("MessageID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ECommerce1.Models.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NotifCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotifDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotifRead")
                        .HasColumnType("int");

                    b.Property<string>("NotifTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotifTrash")
                        .HasColumnType("int");

                    b.HasKey("NotificationID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ECommerce1.Models.OrderDetails", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ItemQuantity")
                        .HasColumnType("real");

                    b.Property<float>("ItemSubTotal")
                        .HasColumnType("real");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("TransactionID");

                    b.ToTable("OrdersDetails");
                });

            modelBuilder.Entity("ECommerce1.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("MethodID")
                        .HasColumnType("int");

                    b.Property<int>("TransactionID")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ECommerce1.Models.PaymentMethod", b =>
                {
                    b.Property<int>("MethodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PayMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MethodID");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("ECommerce1.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ECommerce1.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("ECommerce1.Models.RoleAccessability", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleBanAccounts")
                        .HasColumnType("int");

                    b.Property<int>("RoleCreateAccounts")
                        .HasColumnType("int");

                    b.Property<int>("RoleCreateAnnouncement")
                        .HasColumnType("int");

                    b.Property<int>("RoleCreateItem")
                        .HasColumnType("int");

                    b.Property<int>("RoleCreatePromotion")
                        .HasColumnType("int");

                    b.Property<int>("RoleCreateReports")
                        .HasColumnType("int");

                    b.Property<int>("RoleDeleteAccounts")
                        .HasColumnType("int");

                    b.Property<int>("RoleDeleteAnnouncement")
                        .HasColumnType("int");

                    b.Property<int>("RoleDeleteItem")
                        .HasColumnType("int");

                    b.Property<int>("RoleDeleteMessages")
                        .HasColumnType("int");

                    b.Property<int>("RoleDeletePromotion")
                        .HasColumnType("int");

                    b.Property<int>("RoleDeleteReports")
                        .HasColumnType("int");

                    b.Property<int>("RoleDisplayAccounts")
                        .HasColumnType("int");

                    b.Property<int>("RoleDisplayAnnouncement")
                        .HasColumnType("int");

                    b.Property<int>("RoleDisplayItem")
                        .HasColumnType("int");

                    b.Property<int>("RoleDisplayMessages")
                        .HasColumnType("int");

                    b.Property<int>("RoleDisplayOrders")
                        .HasColumnType("int");

                    b.Property<int>("RoleDisplayPromotion")
                        .HasColumnType("int");

                    b.Property<int>("RoleDisplayReports")
                        .HasColumnType("int");

                    b.Property<int>("RoleReplyMessages")
                        .HasColumnType("int");

                    b.Property<int>("RoleUnbanAccounts")
                        .HasColumnType("int");

                    b.Property<int>("RoleUpdateAnnouncement")
                        .HasColumnType("int");

                    b.Property<int>("RoleUpdateItem")
                        .HasColumnType("int");

                    b.Property<int>("RoleUpdateMessages")
                        .HasColumnType("int");

                    b.Property<int>("RoleUpdateOrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoleUpdatePromotion")
                        .HasColumnType("int");

                    b.Property<int>("RoleUpdateReports")
                        .HasColumnType("int");

                    b.HasKey("RoleID");

                    b.ToTable("RoleAccessability");
                });

            modelBuilder.Entity("ECommerce1.Models.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ECommerce1.Models.Security", b =>
                {
                    b.Property<int>("SecurityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeSecurityAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeSecurityQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SecurityID");

                    b.ToTable("Security");
                });

            modelBuilder.Entity("ECommerce1.Models.SocMed", b =>
                {
                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("View_SocMed");
                });

            modelBuilder.Entity("ECommerce1.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("ECommerce1.Models.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TransactionTotalPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ECommerce1.Models.ProductCategory", b =>
                {
                    b.HasOne("ECommerce1.Models.Product", null)
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ECommerce1.Models.Status", b =>
                {
                    b.HasOne("ECommerce1.Models.Product", null)
                        .WithMany("Statuses")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ECommerce1.Models.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
